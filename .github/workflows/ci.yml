# This workflow will build a Java project with Gradle
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-gradle

name: Java CI with Gradle

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  secret-detection: 
    runs-on: self-hosted
    steps:
    - uses: actions/checkout@v2
    - name: detect secrets
      run: |
          pip install detect-secrets
          scan_result=$(detect-secrets scan)
          if echo "$scan_result" | grep -q '"hashed_secret":'; then
          echo "Secrets were found during the scan:"
          echo "$scan_result"
          #exit 1
          else
          echo "No secrets were found."
          fi
          echo "Current Directory (PWD): $PWD"
              
Build:
  
   runs-on: self-hosted
   steps:
    - uses: actions/checkout@v2
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1
      with:
        java-version: 11.0

    - name: Grant execute permission for gradlew
      run: chmod +x gradlew

    - name: Build with Gradle
      run: ./gradlew build
    - name: Upload JAR as artifact
      uses: actions/upload-artifact@v2
      with:
        name: gradleartifact  
        path: /home/demousr/actions-runner/_work/java-gradle-project/java-gradle-project/build/libs/*.jar
  
    - name: Add coverage to PR
      id: jacoco
      uses: madrapps/jacoco-report@v1.6.1
      with:
           paths: |
            build/reports/jacoco/prodNormalDebugCoverage/prodNormalDebugCoverage.xml
            build/reports/jacoco/**/debugCoverage.xml
           token: ${{ secrets.GITHUB_TOKEN }}
           min-coverage-overall: 40
           min-coverage-changed-files: 60
     
    - name: Run tests
      run: ./gradlew test  
    - name: Archive test reports
      uses: actions/upload-artifact@v2
      with:
        name: test-reports
        path: build/reports/tests

    - name: Install Node.js
      uses: actions/setup-node@v3
      with:
          node-version: '14'
  
    - name: Snyk Security Scan
      run: |
        cd /home/demousr/actions-runner/_work/java-gradle-project/java-gradle-project
        snyk auth ${{ secrets.SNYK_TOKEN }}
        ./gradlew build
        snyk test --json > snyk-report.json
      continue-on-error: true

    - name: List Files After Snyk
      run: ls -R
    - name: Upload Snyk Results
      uses: actions/upload-artifact@v2
      with:
        name: snyk-report
        path: snyk-report.json
  
    - name: Log in to nexus
      run: docker login -u ${{ secrets.NEXUS_USERNAME}} -p ${{ secrets.NEXUS_PASSWORD}} ${{ secrets.NEXUS_URL}}

    - name: Build Docker image
      run: docker build -t mydockerimage .
    
    - name: Tag Docker image
      
      run: docker tag mydockerimage ${{ secrets.NEXUS_URL }}/${{ secrets.NEXUS_REPO }}:${GITHUB_RUN_NUMBER}
         
    - name: Push Docker image to Nexus
      run: docker push ${{ secrets.NEXUS_URL }}/${{ secrets.NEXUS_REPO }}:${GITHUB_RUN_NUMBER}
      
  deploy:
    runs-on: self-hosted
    needs: Build
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v2
        with: 
          repository: prema6396/Argocd
          ref: main
          token: ${{secrets.GIT_PAT}}

      - name: deploy
        run: |
          git config --global user.email "${{secrets.GIT_USER_MAIL}}"
          git config --global user.name "${{secrets.GIT_USER_NAME}}"       
          
          sed -i "s|${{ secrets.NEXUS_REPO }}:.*|${{ secrets.NEXUS_REPO }}:${GITHUB_RUN_NUMBER}|" deployment.yaml
          git add .
          git commit -m "deployment file updated"
          git push origin HEAD:main
          
        env:
          GIT_PAT: ${{secrets.GIT_PAT}}

       
       
      
        
